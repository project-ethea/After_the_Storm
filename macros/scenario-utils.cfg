#textdomain wesnoth-After_the_Storm

#define NO_START_OF_SCENARIO_SAVE
    [+endlevel]
        save=no
    [/endlevel]
#enddef

#define NO_REPLAY_SAVE
    [+endlevel]
        replay_save=no
    [/endlevel]
#enddef

#define NO_END_CREDITS
    [+endlevel]
        end_credits=no
    [/endlevel]
#enddef

#define NO_END_TEXT
    [+endlevel]
        end_text=" " # wmllint: ignore
        # NOTE: end_text_duration cannot be zero; that causes the engine
        # to fallback to 3500 milliseconds.
        end_text_duration=1
    [/endlevel]
#enddef

#define ENDLEVEL_QUIET
    [endlevel]
        result=victory
        bonus,linger_mode,carryover_report=no,no,no
        music=silence.ogg
        {NEW_GOLD_CARRYOVER 100}
    [/endlevel]
#enddef

#define ENDLEVEL_CONTINUE
    [endlevel]
        result=victory
        bonus,linger_mode,carryover_report=no,yes,no
        music=silence.ogg
        {NEW_GOLD_CARRYOVER 100}
    [/endlevel]
#enddef

#define ENDLEVEL_VICTORY BONUS
    [endlevel]
        result=victory
        bonus={BONUS}
        linger_mode,carryover_report=yes,yes
        {NEW_GOLD_CARRYOVER 40}
    [/endlevel]
#enddef

#define ENDLEVEL_VICTORY_NO_GOLD_CARRYOVER
    [endlevel]
        result=victory
        bonus=no
        linger_mode,carryover_report=yes,yes
        {NEW_GOLD_CARRYOVER 0}
    [/endlevel]
#enddef

#define ENDLEVEL_DEFEAT
    [endlevel]
        result=defeat
    [/endlevel]
#enddef

#define SIGHTED_SUF_BY_PLAYER _SPOTTED_UNIT_SUF
    name=sighted
    [filter]
        {_SPOTTED_UNIT_SUF}
    [/filter]
    [filter_second]
        side=1
    [/filter_second]

    [redraw][/redraw]
#enddef

#define SIGHTED_SUF_BY_SIDE _SPOTTED_UNIT_SUF _SPOTTER_SIDE_NUM
    name=sighted
    [filter]
        {_SPOTTED_UNIT_SUF}
    [/filter]
    [filter_second]
        side={_SPOTTER_SIDE_NUM}
    [/filter_second]

    [redraw][/redraw]
#enddef

#define UNIT_VISIBLE_FOR_SIDE _SIDE
    [filter_vision]
        visible=yes
        side={_SIDE}
    [/filter_vision]
#enddef

#
# Fires a custom event when stumbling upon a unit matching the
# specified filter for the first time. The custom event should
# be a one-time-only event or weird things may happen.
#
# The unit stumbled upon will be the secondary unit for the
# custom event handler, while the player unit becomes the primary
# unit.
#
#define FIRE_EVENT_ON_STUMBLE_UPON _EVT_ID _SUF
    [event]
        name=sighted
        [filter]
            {_SUF}
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [redraw][/redraw]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        [filter]
            {_SUF}
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        [filter]
            side=1
        [/filter]
        [filter_second]
            {_SUF}
        [/filter_second]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
            [secondary_unit]
                x,y=$x2,$y2
            [/secondary_unit]
        [/fire_event]
    [/event]
#enddef

#define RETRIEVE_GOLD _AMOUNT
    # It's mandatory to use a variable instead of a macro, as the latter causes the resultant text
    # not to be matched in the gettext source.
    {VARIABLE temp_gold_retrieval_amount ({_AMOUNT})}
    [message]
        speaker=narrator
        image="items/gold-coins-medium.png"
        sound=gold.ogg
        message= _ "You retrieve $temp_gold_retrieval_amount pieces of gold."
    [/message]
    [gold]
        side=1
        amount=$temp_gold_retrieval_amount
    [/gold]
    {CLEAR_VARIABLE temp_gold_retrieval_amount}
#enddef

#define RECEIVE_GOLD _AMOUNT
    # It's mandatory to use a variable instead of a macro, as the latter causes the resultant text
    # not to be matched in the gettext source.
    {VARIABLE temp_gold_retrieval_amount ({_AMOUNT})}
    [message]
        speaker=narrator
        image="items/gold-coins-medium.png"
        sound=gold.ogg
        message= _ "You receive $temp_gold_retrieval_amount pieces of gold!"
    [/message]
    [gold]
        side=1
        amount=$temp_gold_retrieval_amount
    [/gold]
    {CLEAR_VARIABLE temp_gold_retrieval_amount}
#enddef

#define ADD_GOLD _SIDE _ONEASY _ONMEDIUM _ONHARD
    [gold]
        side={_SIDE}
        {QUANTITY amount {_ONEASY} {_ONMEDIUM} {_ONHARD} }
    [/gold]
#enddef

#define SET_GOLD _SIDE _ONEASY _ONMEDIUM _ONHARD
    [modify_side]
        side={_SIDE}
        {QUANTITY gold {_ONEASY} {_ONMEDIUM} {_ONHARD} }
    [/modify_side]
#enddef

#define SCROLL_TO_LOCATION_AND_RETURN_TO _X1 _Y1 _X2 _Y2
    [redraw][/redraw]

    [scroll_to]
        x={_X1}
        y={_Y1}
    [/scroll_to]

    [delay]
        time=250
    [/delay]

    [scroll_to]
        x={_X2}
        y={_Y2}
    [/scroll_to]
#enddef

#define SCROLL_TO_LOCATION_AND_RETURN_TO_PRIMARY_UNIT _X _Y
    {SCROLL_TO_LOCATION_AND_RETURN_TO ({_X}) ({_Y}) ($x1) ($y1)}
#enddef

#define SCROLL_TO_LOCATION_AND_RETURN_TO_SECONDARY_UNIT _X _Y
    {SCROLL_TO_LOCATION_AND_RETURN_TO ({_X}) ({_Y}) ($x2) ($y2)}
#enddef

#define CLEAR_CAVE_SHROUD _ADDITIONAL_SLF
    [remove_shroud]
        side=1
        terrain=!,X*,X*^*,*^X*
        [or]
            [filter_adjacent_location]
                terrain=!,X*,X*^*,*^X*
            [/filter_adjacent_location]
        [/or]
        [and]
            {_ADDITIONAL_SLF}
        [/and]
    [/remove_shroud]
#enddef

#define UNLIMITED_PLAYER_MOVES
    [event]
        id=UNLIMITED_PLAYER_MOVES_impl
        name=moveto
        first_time_only=no
        [filter]
            side=1
        [/filter]

        {VARIABLE unit.moves $unit.max_moves}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]

        [allow_undo][/allow_undo]
    [/event]
#enddef

#define DISABLE_UNLIMITED_PLAYER_MOVES
    [remove_event]
        id=UNLIMITED_PLAYER_MOVES_impl # wmllint: ignore
    [/remove_event]
#enddef

#define NO_RECRUITS_OR_RECALLS _EXTRA_CONDITION
    #
    # NOTE: Wesnoth 1.11.1 and later only seem to deduct gold once
    # the unit has passed prerecruit/prerecall without being deleted
    # from the gamemap.
    #

    [event]
        name=prerecruit
        first_time_only=no
        [filter]
            side=1
        [/filter]
        [filter_condition]
            {_EXTRA_CONDITION}
        [/filter_condition]

        [kill]
            x,y=$x1,$y1
        [/kill]

        [fire_event]
            name=ui_handler_NO_RECRUITS_OR_RECALLS
        [/fire_event]
    [/event]

    [event]
        name=prerecall
        first_time_only=no
        [filter]
            side=1
        [/filter]
        [filter_condition]
            {_EXTRA_CONDITION}
        [/filter_condition]

        {PUT_TO_RECALL_LIST (x,y=$x1,$y1)}

        [fire_event]
            name=ui_handler_NO_RECRUITS_OR_RECALLS
        [/fire_event]
    [/event]

    [event]
        id=ui_handler_NO_RECRUITS_OR_RECALLS
        name=ui_handler_NO_RECRUITS_OR_RECALLS
        first_time_only=no
        [transient_message]
            message= _ "You cannot recruit or recall units at this time!"
        [/transient_message]
    [/event]
#enddef

#define SET_TALK_UNITS _SUF
    [store_unit]
        [filter]
            [not]
                {_SUF}
            [/not]
            [filter_wml]
                [variables]
                    can_talk=yes
                [/variables]
            [/filter_wml]
        [/filter]
        variable=temp_SET_TALK_UNITS_store
    [/store_unit]

    {FOREACH temp_SET_TALK_UNITS_store temp_SET_TALK_UNITS_k}
        {CLEAR_VARIABLE temp_SET_TALK_UNITS_store[$temp_SET_TALK_UNITS_k].variables.can_talk}

        [unstore_unit]
            variable="temp_SET_TALK_UNITS_store[$temp_SET_TALK_UNITS_k]"
            find_vacant=no
        [/unstore_unit]
    {NEXT temp_SET_TALK_UNITS_k}

    [store_unit]
        [filter]
            {_SUF}
        [/filter]
        variable=temp_SET_TALK_UNITS_store
    [/store_unit]

    {FOREACH temp_SET_TALK_UNITS_store temp_SET_TALK_UNITS_k}
        {VARIABLE temp_SET_TALK_UNITS_store[$temp_SET_TALK_UNITS_k].variables.can_talk yes}

        [unstore_unit]
            variable="temp_SET_TALK_UNITS_store[$temp_SET_TALK_UNITS_k]"
            find_vacant=no
        [/unstore_unit]
    {NEXT temp_SET_TALK_UNITS_k}

    {CLEAR_VARIABLE temp_SET_TALK_UNITS_store}
#enddef

##
# Removes an event barrier consisting of adjacent hexes matching
# a terrain type filter (usually *^Zz\,*^Zz/) on the specified location
# and highlights the affected locations for the player.
##
#define REMOVE_EVENT_BARRIER _TERRAIN_FILTER _TARGET_X _TARGET_Y
    [simplify_location_filter]
        x={_TARGET_X}
        y={_TARGET_Y}
        radius=6
        [filter_radius]
            terrain={_TERRAIN_FILTER}
        [/filter_radius]
        variable=temp_GATE_GLYPH_locs
    [/simplify_location_filter]

    [remove_terrain_overlays]
        x=$temp_GATE_GLYPH_locs.x
        y=$temp_GATE_GLYPH_locs.y
    [/remove_terrain_overlays]

    [remove_shroud]
        side=1
        x=$temp_GATE_GLYPH_locs.x
        y=$temp_GATE_GLYPH_locs.y
    [/remove_shroud]

    [redraw]
        side=1
    [/redraw]

    [scroll_to]
        x={_TARGET_X}
        y={_TARGET_Y}
    [/scroll_to]

    {HIGHLIGHT_GOAL (
        x=$temp_GATE_GLYPH_locs.x
        y=$temp_GATE_GLYPH_locs.y
    )}

    [scroll_to]
        x,y=$x1,$y1
    [/scroll_to]

    [redraw][/redraw]

    {CLEAR_VARIABLE temp_GATE_GLYPH_locs}
#enddef

#define DISALLOW_END_TURN
    [disallow_end_turn][/disallow_end_turn]
#enddef

#define ALLOW_END_TURN
    [allow_end_turn][/allow_end_turn]
#enddef

#
# From Wesnoth 1.11.13 onwards, sides with no on-map leaders at the end of a
# scenario are considered defeated and permanently dropped from saved games.
#
#define DO_NOT_REMOVE_FROM_CARRYOVER_ON_DEFEAT
    remove_from_carryover_on_defeat=no
#enddef

# kate: indent-mode normal; encoding utf-8; space-indent on;
